// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  assignedTasks Task[]    @relation("AssignedTo")
  createdTasks  Task[]    @relation("CreatedBy")
  comments      Comment[]
}

model Task {
  id          String      @id @default(cuid())
  title       String
  description String?
  status      TaskStatus  @default(NOT_STARTED)
  dueDate     DateTime?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  assignedTo  User        @relation("AssignedTo", fields: [assignedToId], references: [id])
  assignedToId String
  createdBy   User        @relation("CreatedBy", fields: [createdById], references: [id])
  createdById String
  comments    Comment[]
  checklist   Checklist   @relation(fields: [checklistId], references: [id])
  checklistId String
}

model Checklist {
  id          String    @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  tasks       Task[]
  closeCycle  CloseCycle @relation(fields: [closeCycleId], references: [id])
  closeCycleId String
}

model CloseCycle {
  id          String      @id @default(cuid())
  name        String
  startDate   DateTime
  endDate     DateTime
  status      CycleStatus @default(ACTIVE)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  checklists  Checklist[]
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  task      Task     @relation(fields: [taskId], references: [id])
  taskId    String
}

enum Role {
  ADMIN
  USER
}

enum TaskStatus {
  NOT_STARTED
  IN_PROGRESS
  DONE
  BLOCKED
}

enum CycleStatus {
  ACTIVE
  COMPLETED
  ARCHIVED
}
